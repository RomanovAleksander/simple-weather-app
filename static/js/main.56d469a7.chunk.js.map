{"version":3,"sources":["services/ApiService.js","utils/background.js","components/Search/Search.js","components/CityItem/CityItem.js","components/App.js","index.js"],"names":["ApiService","_url","_prefix","errObj","url","status","message","option","a","fetch","this","res","ok","json","fetchData","cors","weather_state_abbr","hexToRgb","hex","result","exec","r","parseInt","g","b","calculateColorInBetween","start","end","temp","startRGB","endRGB","percent","Math","abs","resultRed","resultGreen","resultBlue","setBackgroundColor","Search","onSubmit","useState","query","setQuery","className","e","preventDefault","toLowerCase","type","autoComplete","placeholder","value","onChange","target","minLength","required","CityItem","city","handleClick","src","getWeatherIcon","consolidated_weather","alt","weather_state_name","title","parent","the_temp","toString","substring","min_temp","max_temp","onClick","latt_long","woeid","App","latitude","setLatitude","longitude","setLongitude","weatherData","setWeatherData","setTemp","error","setError","useEffect","navigator","geolocation","getCurrentPosition","position","coords","getWeatherData","getWeather","then","data","catch","err","style","backgroundColor","parseFloat","round","min","max","event","step","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.56d469a7.chunk.js","sourcesContent":["class ApiService {\r\n  _url = 'https://www.metaweather.com';\r\n  _prefix = 'https://cors-anywere.herokuapp.com/'\r\n\r\n  errObj = (url, status) => {\r\n    return {\r\n      message: `Invalid request: ${url}, status ${status}`,\r\n      status: status\r\n    }\r\n  }\r\n\r\n  async fetchData(url, option) {\r\n    const res = await fetch(`${this._prefix}${this._url}${url}`, option);\r\n    if (!res.ok) {\r\n      throw this.errObj(`${this._url}${url}`, res.status);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  async getWeather(url) {\r\n    return this.fetchData(url, {\r\n      cors: 'no-cors'\r\n    })\r\n  }\r\n\r\n  getWeatherIcon(weather_state_abbr) {\r\n    return `${this._url}/static/img/weather/png/64/${weather_state_abbr}.png`;\r\n  }\r\n}\r\n\r\nexport default new ApiService();\r\n","const hexToRgb = (hex) => {\r\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n};\r\n\r\nconst calculateColorInBetween = (start, end, temp) => {\r\n  const startRGB = hexToRgb(start);\r\n  const endRGB = hexToRgb(end);\r\n  const percent = (Math.abs(temp) + 10) / 40;\r\n\r\n  const resultRed = startRGB.r + percent * (endRGB.r - startRGB.r);\r\n  const resultGreen = startRGB.g + percent * (endRGB.g - startRGB.g);\r\n  const resultBlue = startRGB.b + percent * (endRGB.b - startRGB.b);\r\n\r\n  return `rgb(${resultRed}, ${resultGreen}, ${resultBlue})`;\r\n};\r\n\r\nexport const setBackgroundColor = (temp) => {\r\n  if (temp <= -10) {\r\n    return '#00ffff';\r\n  } else if (temp > -10 && temp < 10) {\r\n    return calculateColorInBetween('#00ffff', '#fff700', temp);\r\n  } else if (temp === 10) {\r\n    return '#fff700';\r\n  } else if (temp > 10 && temp < 30) {\r\n    return calculateColorInBetween('#fff700', '#ff8c00', temp);\r\n  } else if (temp >= 30) {\r\n    return '#ff8c00'\r\n  } else {\r\n    return '#ffffff'\r\n  }\r\n};\r\n","import React, {useState} from 'react';\r\nimport './search.css';\r\n\r\nexport default function Search({ onSubmit }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    let query = e.target.value;\r\n    setQuery(query);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (query.toLowerCase() === 'kyiv') {\r\n      onSubmit('kiev');\r\n    } else {\r\n      onSubmit(query.toLowerCase());\r\n    }\r\n    setQuery('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"search-form\" onSubmit={handleSubmit}>\r\n      <div className=\"input-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Enter the city\"\r\n          value={query}\r\n          onChange={handleChange}\r\n          minLength={1}\r\n          required\r\n        />\r\n        <button type=\"submit\" className=\"search-button\"/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ApiService from '../../services/ApiService';\r\nimport './cityItem.css';\r\n\r\nexport default function CityItem({ city, handleClick }) {\r\n  return (\r\n    <div className=\"city-item\" key={city.woeid}>\r\n      <img src={ApiService.getWeatherIcon(city.consolidated_weather[0].weather_state_abbr)}\r\n           alt={`${city.consolidated_weather[0].weather_state_name}`}/>\r\n      <div className=\"wrapper\">\r\n        <div className=\"title green\">\r\n          {city.title}, {city.parent.title}\r\n          <span className=\"weather\"> {city.consolidated_weather[0].weather_state_name}</span>\r\n        </div>\r\n        <div className=\"temp-container\">\r\n          <span\r\n            className=\"temp\">{city.consolidated_weather[0].the_temp.toString().substring(0, 4)} °С</span> temperature\r\n          from\r\n          {city.consolidated_weather[0].min_temp} to {city.consolidated_weather[0].max_temp} °С\r\n        </div>\r\n        <div>\r\n          Geo coords {''}\r\n          <span className=\"green coords\" onClick={() => handleClick(city.parent.latt_long)}>\r\n            [{city.parent.latt_long}]\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n","import React, { useState, useEffect }  from 'react';\nimport ApiService from '../services/ApiService';\nimport { setBackgroundColor } from '../utils/background';\nimport Search from './Search/Search';\nimport CityItem from './CityItem/CityItem';\n\nfunction App() {\n  const [latitude, setLatitude] = useState(false);\n  const [longitude, setLongitude] = useState(false);\n  const [query, setQuery] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [temp, setTemp] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLatitude(position.coords.latitude);\n      setLongitude(position.coords.longitude);\n    })\n  }, []);\n\n  useEffect(() => {\n    if (latitude && longitude) {\n      getWeatherData(`?lattlong=${latitude},${longitude}`);\n    }\n  }, [latitude, longitude]);\n\n  useEffect(() => {\n    if (query !== '') {\n      getWeatherData(`?query=${query}`);\n    }\n  }, [query]);\n\n  const getWeatherData = (url) => {\n    ApiService.getWeather(`/api/location/search/${url}`)\n      .then((data) => {\n        ApiService.getWeather(`/api/location/${data[0].woeid}/`)\n          .then((data) => {\n            setWeatherData(data);\n            setTemp(data.consolidated_weather[0].the_temp);\n            setError(null);\n          })\n          .catch((err) => setError(err));\n      })\n      .catch((err) => setError(err));\n  }\n\n  const onSubmit = (query) => {\n    setWeatherData(null);\n    setQuery(query);\n  };\n\n  const handleClick = (coords) => {\n    setQuery('');\n    getWeatherData(`?lattlong=${coords}`);\n  };\n\n  const handleChange = (event) => {\n    setTemp(event.target.value);\n  };\n\n  return (\n    <>\n      <Search onSubmit={onSubmit}/>\n      {error && (\n        <div className=\"container\">\n          <h3>Ops... Something went wrong</h3>\n        </div>\n      )}\n      {weatherData && !query && (\n        <div className=\"container\" style={{\n          backgroundColor: setBackgroundColor(parseFloat(temp))\n        }}>\n          <img src={ApiService.getWeatherIcon(weatherData.consolidated_weather[0].weather_state_abbr)}\n               alt={`${weatherData.consolidated_weather[0].weather_state_name}`}/>\n          {temp && (\n            <div className=\"slider-container\">\n              <label className=\"label\">\n                Temperature: {Math.round(parseFloat(temp))} °С\n              </label>\n              <input\n                className=\"slider\"\n                type=\"range\"\n                min=\"-60\"\n                max=\"60\"\n                value={temp}\n                onChange={handleChange}\n                step=\"1\"\n              />\n            </div>\n          )}\n        </div>\n      )}\n      {weatherData && query && (\n        <CityItem city={weatherData} handleClick={handleClick}/>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}